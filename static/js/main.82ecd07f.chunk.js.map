{"version":3,"sources":["assets/example-tracking-image.zpt","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","onNotVisible","anchor","console","log","id","onNewAnchor","onVisible","targetImage","targetFile","position","color","intensity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,MAA0B,mD,QCwB1BA,MApBf,WACI,OACE,eAAC,eAAD,WACE,cAAC,eAAD,IACA,cAAC,eAAD,CACEC,aAAc,SAACC,GAAD,OAAYC,QAAQC,IAAR,sBAA2BF,EAAOG,MAC5DC,YAAa,SAACJ,GAAD,OAAYC,QAAQC,IAAR,qBAA0BF,EAAOG,MAC1DE,UAAW,SAACL,GAAD,OAAYC,QAAQC,IAAR,kBAAuBF,EAAOG,MACrDG,YAAaC,EAJf,SAME,uBAAMC,SAAU,CAAC,EAAG,GAAI,GAAxB,UACE,yCACA,sCAAsBC,MAAM,iBAGhC,kCAAkBD,SAAU,CAAC,IAAK,EAAG,GAAIE,UAAW,UCL7CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.82ecd07f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/example-tracking-image.775f3d2f.zpt\";","import React from 'react';\r\nimport { ZapparCamera, ImageTracker, ZapparCanvas } from '@zappar/zappar-react-three-fiber';\r\nimport targetFile from './assets/example-tracking-image.zpt'\r\n\r\nfunction App() {\r\n    return (\r\n      <ZapparCanvas>\r\n        <ZapparCamera />\r\n        <ImageTracker\r\n          onNotVisible={(anchor) => console.log(`Not visible ${anchor.id}`)}\r\n          onNewAnchor={(anchor) => console.log(`New anchor ${anchor.id}`)}\r\n          onVisible={(anchor) => console.log(`Visible ${anchor.id}`)}\r\n          targetImage={targetFile}\r\n        >\r\n          <mesh position={[0, 0, -5]}>\r\n            <sphereBufferGeometry />\r\n            <meshStandardMaterial color=\"hotpink\" />\r\n          </mesh>\r\n        </ImageTracker>\r\n        <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\r\n      </ZapparCanvas>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}