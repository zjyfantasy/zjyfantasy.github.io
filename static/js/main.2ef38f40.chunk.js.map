{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","useState","placementMode","setPlacementMode","placementCameraOffset","color","position","intensity","id","onClick","currentPlacementMode","onKeyDown","role","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAsCeA,MAlCf,WACI,MAAwCC,oBAAS,GAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACA,OACE,qCACE,eAAC,eAAD,WACE,cAAC,eAAD,IACA,cAAC,iBAAD,CAAgBD,cAAeA,EAAeE,sBAAuB,CAAC,EAAG,GAAI,GAA7E,SACE,iCACE,yCACA,sCAAsBC,MAAM,iBAGhC,kCAAkBC,SAAU,CAAC,IAAK,EAAG,GAAIC,UAAW,SAGtD,sBACEC,GAAG,sBACHC,QAAS,WACPN,GAAiB,SAACO,GAAD,OAA2BA,MAE9CC,UAAW,WACTR,GAAiB,SAACO,GAAD,OAA2BA,MAE9CE,KAAK,SACLC,SAAU,EATZ,wBAYGX,EAAgB,UAAY,YAZ/B,oBCLOY,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,yCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2ef38f40.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { ZapparCamera, InstantTracker, ZapparCanvas } from '@zappar/zappar-react-three-fiber';\r\n\r\n\r\nfunction App() {\r\n    let [placementMode, setPlacementMode] = useState(true);\r\n    return (\r\n      <>\r\n        <ZapparCanvas>\r\n          <ZapparCamera />\r\n          <InstantTracker placementMode={placementMode} placementCameraOffset={[0, 0, -5]}>\r\n            <mesh>\r\n              <sphereBufferGeometry />\r\n              <meshStandardMaterial color=\"hotpink\" />\r\n            </mesh>\r\n          </InstantTracker>\r\n          <directionalLight position={[2.5, 8, 5]} intensity={1.5} />\r\n\r\n        </ZapparCanvas>\r\n        <div\r\n          id=\"zappar-placement-ui\"\r\n          onClick={() => {\r\n            setPlacementMode((currentPlacementMode) => !currentPlacementMode);\r\n          }}\r\n          onKeyDown={() => {\r\n            setPlacementMode((currentPlacementMode) => !currentPlacementMode);\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          Tap here to\r\n          {placementMode ? ' place ' : ' pick up '}\r\n          the object\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}