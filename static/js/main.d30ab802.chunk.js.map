{"version":3,"sources":["assets/BusinessCard.zpt","assets/ZapparLog.glb","assets/zapsplat_laser.mp3","assets/BusinessCardPlain.png","assets/WebLaunch.png","assets/Facebook.png","assets/Phone.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","mesh","useRef","cardBgTexture","useLoader","THREE","cardBgTextureImg","ref","position","args","attach","map","Icons","webIconTexture","webIconTextureImg","facebookIconTexture","facebookIconTextureImg","phoneIconTexture","phoneIconTextureImg","onClick","window","open","color","transparent","Nametitle","Text","fontSize","Cta","maxWidth","textAlign","Model","scene","GLTFLoader","Zapbolt","object","dispose","scale","rotation","listener","ZapLaser","load","zapLaserMp3","buffer","setBuffer","setLoop","play","Sound","App","useState","visibleState","setVisibleState","gl","antialias","fallback","onNotVisible","onNewAnchor","anchor","console","log","id","onVisible","targetImage","targetFile","visible","intensity","castShadow","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d30ab802.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BusinessCard.55a73b48.zpt\";","export default __webpack_public_path__ + \"static/media/ZapparLog.30789ce2.glb\";","export default __webpack_public_path__ + \"static/media/zapsplat_laser.029b825f.mp3\";","export default __webpack_public_path__ + \"static/media/BusinessCardPlain.eb10baf3.png\";","export default __webpack_public_path__ + \"static/media/WebLaunch.a4f6897e.png\";","export default __webpack_public_path__ + \"static/media/Facebook.e04d19e5.png\";","export default __webpack_public_path__ + \"static/media/Phone.afaaae95.png\";","import { render } from 'react-dom';\r\nimport React, { useRef, useState, Suspense } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { useLoader } from '@react-three/fiber';\r\nimport { Text } from '@react-three/drei';\r\nimport {\r\n ZapparCamera, ImageTracker, ZapparCanvas, BrowserCompatibility,\r\n} from '@zappar/zappar-react-three-fiber';\r\n\r\nimport targetFile from './assets/BusinessCard.zpt';\r\n\r\nimport Zapbolt from './assets/ZapparLog.glb';\r\nimport zapLaserMp3 from './assets/zapsplat_laser.mp3';\r\n\r\nimport cardBgTextureImg from './assets/BusinessCardPlain.png';\r\nimport webIconTextureImg from './assets/WebLaunch.png';\r\nimport facebookIconTextureImg from './assets/Facebook.png';\r\nimport phoneIconTextureImg from './assets/Phone.png';\r\n\r\n// Background\r\nfunction Background() {\r\n  const mesh:React.MutableRefObject<any> = useRef();\r\n  const cardBgTexture = useLoader(THREE.TextureLoader, cardBgTextureImg) as THREE.Texture;\r\n\r\n  return (\r\n    <mesh ref={mesh} position={[0, 0, 0]}>\r\n      <planeBufferGeometry args={[3, 2]} />\r\n      <meshStandardMaterial attach=\"material\" map={cardBgTexture} />\r\n    </mesh>\r\n  );\r\n}\r\n// Icons\r\nfunction Icons() {\r\n  const webIconTexture = useLoader(THREE.TextureLoader, webIconTextureImg) as THREE.Texture;\r\n  const facebookIconTexture = useLoader(THREE.TextureLoader, facebookIconTextureImg) as THREE.Texture;\r\n  const phoneIconTexture = useLoader(THREE.TextureLoader, phoneIconTextureImg) as THREE.Texture;\r\n\r\n  return (\r\n    <group>\r\n      <mesh position={[-1.2, 0.65, 0.3]} onClick={() => window.open('https://zap.works')}>\r\n        <planeBufferGeometry args={[0.38, 0.38]} />\r\n        <meshBasicMaterial attach=\"material\" map={webIconTexture} color=\"white\" transparent />\r\n      </mesh>\r\n      <mesh position={[-0.75, 0.65, 0.3]} onClick={() => window.open('https://zap.works')}>\r\n        <planeBufferGeometry args={[0.38, 0.38]} />\r\n        <meshBasicMaterial attach=\"material\" map={facebookIconTexture} color=\"white\" transparent />\r\n      </mesh>\r\n      <mesh position={[-0.3, 0.65, 0.3]} onClick={() => window.open('tel:123-456-7890123')}>\r\n        <planeBufferGeometry args={[0.38, 0.38]} />\r\n        <meshBasicMaterial attach=\"material\" map={phoneIconTexture} color=\"white\" transparent />\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n// Name and Title\r\nfunction Nametitle() {\r\n  return (\r\n    <group>\r\n      <mesh>\r\n        <Text color=\"white\" position={[-0.958, 0.1, 0.1]} fontSize={0.13}>\r\n          Francesca Ellis\r\n        </Text>\r\n        <Text color=\"white\" position={[-0.85, -0.033, 0.1]} fontSize={0.1}>\r\n          Junior Support Engineer\r\n        </Text>\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n// Call To Action\r\nfunction Cta() {\r\n  return (\r\n    <mesh>\r\n      <Text color=\"white\" position={[-0.86, -0.65, 0.1]} fontSize={0.1} maxWidth={0.8} textAlign=\"center\">\r\n        Tap on an icon to find out more!\r\n      </Text>\r\n    </mesh>\r\n  );\r\n}\r\n// Sound\r\nfunction Sound() {\r\n  const listener = new THREE.AudioListener();\r\n  const ZapLaser = new THREE.Audio(listener);\r\n\r\n  const audioLoader = new THREE.AudioLoader();\r\n  audioLoader.load(zapLaserMp3, (buffer) => {\r\n    ZapLaser.setBuffer(buffer);\r\n    ZapLaser.setLoop(false);\r\n    ZapLaser.play();\r\n  });\r\n}\r\n// 3D Model; Adjusted - https://codesandbox.io/s/r3f-ibl-envmap-simple-k7q9h?file=/src/App.js\r\nfunction Model() {\r\n  // Create a scene with our model\r\n  const { scene } = useLoader(GLTFLoader, Zapbolt) as any;\r\n  // Return our model as a primitive\r\n  return (\r\n    <mesh>\r\n      <primitive\r\n        object={scene}\r\n        dispose={null}\r\n        position={[0.57, -0.05, 0]}\r\n        scale={[2, 2, 2]}\r\n        rotation={[0, 0, 0.01]}\r\n        onClick={() => Sound()}\r\n      />\r\n    </mesh>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    // Set up states\r\n    const [visibleState, setVisibleState] = useState(false);\r\n\r\n    return (\r\n      <>\r\n        <BrowserCompatibility />\r\n        {/* Setup Zappar Canvas */}\r\n        <ZapparCanvas gl={{ antialias: true }}>\r\n          {/* Setup Zappar Camera */}\r\n          <ZapparCamera />\r\n          {/* Setup Zappar Image Tracker, passing our target file */}\r\n          <Suspense fallback={null}>\r\n            <ImageTracker\r\n              onNotVisible={() => { setVisibleState(false); }}\r\n              onNewAnchor={(anchor) => console.log(`New anchor ${anchor.id}`)}\r\n              onVisible={() => { setVisibleState(true); }}\r\n              targetImage={targetFile}\r\n              visible={visibleState}\r\n            >\r\n\r\n              {/* Setup Content */}\r\n              <Background />\r\n              <Icons />\r\n              <Nametitle />\r\n              <Cta />\r\n              <Model />\r\n\r\n            </ImageTracker>\r\n          </Suspense>\r\n          {/* Normal directional light */}\r\n          <directionalLight position={[2.5, 8, 5]} intensity={1.5} castShadow />\r\n        </ZapparCanvas>\r\n      </>\r\n    );\r\n}\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}